version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: cr-demo-postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db0
    network_mode: host
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d db0"]
      interval: 30s
      timeout: 10s
      retries: 3

  migrations:
    image: postgres:16
    container_name: cr-demo-migrations
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db0
      NEW_DB: ${NEW_DB:-0}
    network_mode: host
    volumes:
      - ./postgres:/postgres
    command: >
      sh -c "
        echo 'Waiting for PostgreSQL to be ready...' &&
        until pg_isready -h localhost -p 5432 -U $POSTGRES_USER; do
          sleep 2;
        done &&
        if [ \"$NEW_DB\" = \"1\" ]; then
          echo 'Running migrations...' &&
          # ./postgres/run-migrations.sh;
        else
          echo 'Skipping migrations (NEW_DB not set to 1)';
        fi
      "
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data: 